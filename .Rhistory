}
caos2d_polygon.i1 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
while(count < iter){
n <- sample((1:(point*2))[-n],1, replace = TRUE)
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i2 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
while(count < iter){
n <- sample(c((1:(point*2)), n),1, replace = TRUE)
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i3 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
while(count < iter){
if (values[length(values)] == values[length(values)-1]){
if(n + 1 > point*2){a = 1}else{a = n+1}
if(n - 1 < 1){b = point*2}else{b = n-1}
n <- sample((1:(point*2))[-c(a, b)],1, replace = TRUE)
}else{
n <- sample((1:(point*2)),1, replace = TRUE)
}
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i4 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
while(count < iter){
if (values[length(values)] == values[length(values)-1]){
if(n + 2 > point*2){a = (n+2)-point*2}else{a = n+2}
if(n - 2 < 1){b = point*2+(n-2)}else{b = n-2}
n <- sample((1:(point*2))[-c(a, b)],1, replace = TRUE)
}else{
n <- sample((1:(point*2)),1, replace = TRUE)
}
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i.r <- function(iter, point, costant=0.5, rotate=(2*pi)/4){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors_rot <- t(apply(atractors*costant, 1, function(x,y){
c(x[1]*cos(y)-x[2]*sin(y), x[1]*sin(y) + x[2]*cos(y))
},y=rotate))
atractors <- rbind(atractors, atractors_rot)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
while(count < iter){
n <- sample((1:(point*2)),1, replace = TRUE)
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i5 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
probs<- rbinom(point*2, 10, 0.3)
probs <- probs/sum(probs)
while(count < iter){
n <- sample((1:(point*2)),1, replace = TRUE,prob=probs)
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_polygon.i6 <- function(iter, point, costant=0.5){
steps <- (2*pi)/point
grades <- runif(1, 0, 2*pi)
atractors <- NULL
for (x in 1:(point)){
atractors <- rbind(atractors, c(cos(grades), sin(grades)))
grades <- grades + steps
}
atractors <- rbind(atractors, atractors*costant)
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
n <- 1
values <- c(1,1,1)
probs<- rgeom(point*2, 0.3)
probs <- probs/sum(probs)
while(count < iter){
n <- sample((1:(point*2)),1, replace = TRUE,prob=probs)
values <- c(values, n)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
caos2d_circle <- function(iter, point){
grades <- runif(point, 0, 2*pi)
atractors <- NULL
for (x in grades){
atractors <- rbind(atractors, c(cos(x), sin(x)))
}
print(atractors)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
while(count < iter){
n <- sample(1:point,1, replace = TRUE)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y")
result <- as.data.frame(result)
return(result)
}
set.seed(1)
scat<-caos2d_polygon(10000, 5)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon(10000, 3)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon(10000, 4)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon(10000, 5)lpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
caos3d <- function(iter, point){
atractors <- matrix(runif(point*3, -1,1), ncol = 3, nrow=point)
init <-  (atractors[1,]+atractors[2,])/2
count <- 0
result <- init
while(count < iter){
n <- sample(1:point,1, replace = TRUE)
init <- (init+atractors[n,])/2
result <- rbind(result, init)
count <- count + 1
}
colnames(result) <- c("x", "y", "z")
result <- as.data.frame(result)
return(result)
}
scat<-caos2d_polygon(10000, 5)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon1(10000, 5)
scat<-caos2d_polygon2(10000, 5)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(10000, 5)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(50000, 5)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(50000, 4)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(50000, 3)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon3(50000, 3)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(50000, 3)
scat<-caos2d_polygon2(50000, 3)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
scat<-caos2d_polygon2(50000, 3)
ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.5) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
while(TRUE){
# i <- i + 1
ITS <-ITS_maker()
po <- NULL
xy <- c(0,0)
sto <- TRUE
N1 <- 0
N2 <- 0
for (x in 1:20000){
xy <- ITS(xy[1], xy[2])
po <- rbind(po,xy )
if (abs(xy[1]) + abs(xy[2]) > 1000000){sto <- FALSE;break}
if (x < 60){
XMIN <- min(po[,1])
YMIN <- min(po[,2])
XMAX <- max(po[,1])
YMAX <- max(po[,2])
}
if (x >= 200){
if(xy[1] < XMIN){XMIN <- xy[1]}
if(xy[1] > XMAX){XMAX <- xy[1]}
if(xy[2] < YMIN){YMIN <- xy[2]}
if(xy[2] > YMAX){YMAX <- xy[2]}
# print(c(XMAX, XMIN, YMAX, YMIN))
if(x == 200){D2MAX <- (XMAX-XMIN)^2 + (YMAX-YMIN)^2}
# print(D2MAX)
if (x == 200 | runif(1) < 0.02){
h <- round(runif(1, 1, nrow(po)))
XS <- po[h, 1]
YS <- po[h, 2]
}
DX <- xy[1]-XS
DY <- xy[2]-YS
D2 <- DX*DX + DY*DY
if(D2 < 0.001*D2MAX){N2 <- N2 + 1}
if(D2 < 0.00001*D2MAX){N1 <- N1 + 1}
fd <- 0.434294*log(N2/N1)
# print(fd)
# print(fd)
if(is.na(fd)){sto <- FALSE;break}
if(fd < 1 & x > 1000){sto <- FALSE;break}
}
# print(fractald)
}
if(sto){
print("guapo")
print(fd)
colnames(po) <- c("x", "y")
scat <- as.data.frame(po[-(1:300),])
p<-ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.01) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
print(p)
i <- i+1
print(i)
ggsave(paste("ITS",i,".png",sep = ""))
Sys.sleep(1)
}
}
i <- 1000
while(TRUE){
# i <- i + 1
ITS <-ITS_maker()
po <- NULL
xy <- c(0,0)
sto <- TRUE
N1 <- 0
N2 <- 0
for (x in 1:20000){
xy <- ITS(xy[1], xy[2])
po <- rbind(po,xy )
if (abs(xy[1]) + abs(xy[2]) > 1000000){sto <- FALSE;break}
if (x < 60){
XMIN <- min(po[,1])
YMIN <- min(po[,2])
XMAX <- max(po[,1])
YMAX <- max(po[,2])
}
if (x >= 200){
if(xy[1] < XMIN){XMIN <- xy[1]}
if(xy[1] > XMAX){XMAX <- xy[1]}
if(xy[2] < YMIN){YMIN <- xy[2]}
if(xy[2] > YMAX){YMAX <- xy[2]}
# print(c(XMAX, XMIN, YMAX, YMIN))
if(x == 200){D2MAX <- (XMAX-XMIN)^2 + (YMAX-YMIN)^2}
# print(D2MAX)
if (x == 200 | runif(1) < 0.02){
h <- round(runif(1, 1, nrow(po)))
XS <- po[h, 1]
YS <- po[h, 2]
}
DX <- xy[1]-XS
DY <- xy[2]-YS
D2 <- DX*DX + DY*DY
if(D2 < 0.001*D2MAX){N2 <- N2 + 1}
if(D2 < 0.00001*D2MAX){N1 <- N1 + 1}
fd <- 0.434294*log(N2/N1)
# print(fd)
# print(fd)
if(is.na(fd)){sto <- FALSE;break}
if(fd < 1 & x > 1000){sto <- FALSE;break}
}
# print(fractald)
}
if(sto){
print("guapo")
print(fd)
colnames(po) <- c("x", "y")
scat <- as.data.frame(po[-(1:300),])
p<-ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.01) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
print(p)
i <- i+1
print(i)
ggsave(paste("ITS",i,".png",sep = ""))
Sys.sleep(1)
}
}
ITS_maker3 <- function(x){
while(TRUE){
coef <- sample(seq(-1.2, 1.2, 0.1), 18, replace = FALSE)
j0 <- abs(coef[1]*coef[4] - coef[2]*coef[3])
j1 <- abs(coef[7]*coef[10]- coef[8]*coef[9])
if(!(j0+j1 == 0 | j0 > 1 | j1 > 1)){break}
}
p <- j0/(j0+j1)
function(x,y){
n <- sample(c(0,6,12), 1)
x <-  x*coef[1+n] + y*coef[2+n] + coef[5+n]
y <-  x*coef[3+n] + y*coef[4+n] + coef[6+n]
return(c(x,y))
}
}
set.seed(1)
i <- 1000
while(TRUE){
# i <- i + 1
ITS <-ITS_maker3()
po <- NULL
xy <- c(0,0)
sto <- TRUE
N1 <- 0
N2 <- 0
for (x in 1:20000){
xy <- ITS(xy[1], xy[2])
po <- rbind(po,xy )
if (abs(xy[1]) + abs(xy[2]) > 1000000){sto <- FALSE;break}
if (x < 60){
XMIN <- min(po[,1])
YMIN <- min(po[,2])
XMAX <- max(po[,1])
YMAX <- max(po[,2])
}
if (x >= 200){
if(xy[1] < XMIN){XMIN <- xy[1]}
if(xy[1] > XMAX){XMAX <- xy[1]}
if(xy[2] < YMIN){YMIN <- xy[2]}
if(xy[2] > YMAX){YMAX <- xy[2]}
# print(c(XMAX, XMIN, YMAX, YMIN))
if(x == 200){D2MAX <- (XMAX-XMIN)^2 + (YMAX-YMIN)^2}
# print(D2MAX)
if (x == 200 | runif(1) < 0.02){
h <- round(runif(1, 1, nrow(po)))
XS <- po[h, 1]
YS <- po[h, 2]
}
DX <- xy[1]-XS
DY <- xy[2]-YS
D2 <- DX*DX + DY*DY
if(D2 < 0.001*D2MAX){N2 <- N2 + 1}
if(D2 < 0.00001*D2MAX){N1 <- N1 + 1}
fd <- 0.434294*log(N2/N1)
# print(fd)
# print(fd)
if(is.na(fd)){sto <- FALSE;break}
if(fd < 1 & x > 1000){sto <- FALSE;break}
}
# print(fractald)
}
if(sto){
print("guapo")
print(fd)
colnames(po) <- c("x", "y")
scat <- as.data.frame(po[-(1:300),])
p<-ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.01) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
print(p)
i <- i+1
print(i)
ggsave(paste("ITS",i,".png",sep = ""))
Sys.sleep(1)
}
}
i <- 4000
while(TRUE){
# i <- i + 1
ITS <-ITS_maker()
po <- NULL
xy <- c(0,0)
sto <- TRUE
N1 <- 0
N2 <- 0
for (x in 1:40000){
xy <- ITS(xy[1], xy[2])
po <- rbind(po,xy )
if (abs(xy[1]) + abs(xy[2]) > 1000000){sto <- FALSE;break}
if (x < 60){
XMIN <- min(po[,1])
YMIN <- min(po[,2])
XMAX <- max(po[,1])
YMAX <- max(po[,2])
}
if (x >= 200){
if(xy[1] < XMIN){XMIN <- xy[1]}
if(xy[1] > XMAX){XMAX <- xy[1]}
if(xy[2] < YMIN){YMIN <- xy[2]}
if(xy[2] > YMAX){YMAX <- xy[2]}
# print(c(XMAX, XMIN, YMAX, YMIN))
if(x == 200){D2MAX <- (XMAX-XMIN)^2 + (YMAX-YMIN)^2}
# print(D2MAX)
if (x == 200 | runif(1) < 0.02){
h <- round(runif(1, 1, nrow(po)))
XS <- po[h, 1]
YS <- po[h, 2]
}
DX <- xy[1]-XS
DY <- xy[2]-YS
D2 <- DX*DX + DY*DY
if(D2 < 0.001*D2MAX){N2 <- N2 + 1}
if(D2 < 0.00001*D2MAX){N1 <- N1 + 1}
fd <- 0.434294*log(N2/N1)
# print(fd)
# print(fd)
if(is.na(fd)){sto <- FALSE;break}
if(fd < 1 & x > 1000){sto <- FALSE;break}
}
# print(fractald)
}
if(sto){
print("guapo")
print(fd)
colnames(po) <- c("x", "y")
scat <- as.data.frame(po[-(1:300),])
p<-ggplot(scat) + geom_point(aes(x, y), alpha = 0.5,shape=20, size = 0.01) + theme(legend.position = "none", panel.grid = element_blank(),axis.title = element_blank(),axis.text = element_blank(),axis.ticks = element_blank(),panel.background =element_blank())
print(p)
i <- i+1
print(i)
ggsave(paste("ITS",i,".png",sep = ""))
Sys.sleep(1)
}
}
